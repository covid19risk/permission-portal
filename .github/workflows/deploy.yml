# Builds node app and deploys to AWS S3
# Builds and tests firebase and deploys to staging / prod

name: Deploy

on:
  push:
    branches: [dev, master]

jobs:
  deploy-frontend:
    name: Build and Deploy Frontend App
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Build node app for staging
        if: github.ref == 'refs/heads/dev'
        working-directory: frontend
        env:
          CI: true
        run: |
          npm ci
          npm run init
          npm run git-info
          npm run build:staging

      - name: Build node app for prod
        if: github.ref == 'refs/heads/master'
        working-directory: frontend
        env:
          CI: true
        run: |
          npm ci
          npm run init
          npm run git-info
          npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy to S3
        working-directory: frontend
        run: |
          chmod +x ./scripts/deploy.sh
          ./scripts/deploy.sh

  build-firebase:
    name: Build Firebase
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        working-directory: cloud-functions/functions
        run: npm install
      - name: Initialize config files
        working-directory: cloud-functions/functions
        run: npm run init
      - name: Setup functions config
        if: github.ref == 'refs/heads/dev'
        working-directory: cloud-functions/functions
        run: npm run config:set
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          NODE_ENV: staging
          VERIF_SERVER_PASSWORD: ${{ secrets.VERIF_SERVER_PASSWORD }}
      - name: Setup functions config
        if: github.ref == 'refs/heads/master'
        working-directory: cloud-functions/functions
        run: npm run config:set
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          NODE_ENV: prod
          VERIF_SERVER_PASSWORD: ${{ secrets.VERIF_SERVER_PASSWORD }}
      - name: Lint and Build
        working-directory: cloud-functions/functions
        run: |
          npm run lint
          npm run build
      - name: Remove node_modules for upload
        working-directory: cloud-functions/functions
        run: rm -r node_modules
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cloud-functions-artifact
          path: cloud-functions/functions

  deploy-firebase:
    name: Deploy Firebase
    runs-on: ubuntu-latest
    needs: build-firebase
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: cloud-functions-artifact
          path: cloud-functions/functions

      - name: Install
        working-directory: cloud-functions/functions
        run: npm install

      - name: Deploy to Firebase Staging Infra
        if: github.ref == 'refs/heads/dev'
        uses: w9jds/firebase-action@master
        with:
          args: deploy -f --project=staging
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: cloud-functions/
          NODE_ENV: staging

      - name: Deploy to Firebase Prod Infra
        if: github.ref == 'refs/heads/master'
        uses: w9jds/firebase-action@master
        with:
          args: deploy -f --project=prod
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: cloud-functions/
          NODE_ENV: prod
